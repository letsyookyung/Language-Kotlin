/*
- 스코프 : 변수나 함수, 클래스 같은 '멤버'들을 서로 공유하여 사용할 수 있느 범위를 지정해둔 단위
    - 패키지 내부 / 클래스 내부/ 함수 내부
    - 규칙
        1) 스코프 외부에서는 스코프 내부의 멤버들을 '참조연산자'로만 참조가 가능 a.eat() , a= 참조연산자 임
        2) 동일 스코프 내에서는 멤버들을 공유할 수 있음
        3) 하위 스코프에서는 상위 스코프의 멤버를 재 정의할 수 있음
- 접근제한자 : 스코프 내부로의 접근을 제어하는, <-> 참조연산자, 외부와 내부의 멤버들을 분리
    - public
        ex) public fun b {...}
    - internal
        ex) internal class C {...}
    - private
        ex) private var a = ".."
    - protected

    ------------------

    1) 패키지 스코프
        - public(기본값) : 어떤 패키지에서도 접근 가능
        - internal : 같은 모듈 내에서만 접근 가능
        - private : 같은 파일 내에서만 접근 가능

    2) 클래스 스코프
        - public(기본값) : 클래스 외부에서 늘 접근 가능
        - private : 클래스 내부에서만 접근 가능
        - protected : 클래스 자신과 상속받은 클래스에서 접근

    3)


 */

fun main() {

}